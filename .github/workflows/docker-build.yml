name: Docker Build & Push

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'app/**'
      - 'main.py'
      - 'requirements.txt'
      - 'Dockerfile'
      - '.github/workflows/docker-build.yml'
  pull_request:
    paths:
      - 'app/**'
      - 'main.py'
      - 'requirements.txt'
      - 'Dockerfile'

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  REPOSITORY: moni-personal-repo
  IMAGE_NAME: moni-personal-app

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and push Docker image
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          IMAGE_NAME="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}"

          # Build and push to Artifact Registry
          docker build -t "${IMAGE_NAME}" .
          docker push "${IMAGE_NAME}"

          # Also tag as latest if main branch
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            LATEST_IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest"
            docker tag "${IMAGE_NAME}" "${LATEST_IMAGE}"
            docker push "${LATEST_IMAGE}"
          fi

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always() && github.event_name != 'pull_request'
        with:
          sarif_file: 'trivy-results.sarif'
