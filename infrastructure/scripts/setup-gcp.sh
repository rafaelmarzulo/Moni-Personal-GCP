#!/bin/bash
# ============================================================================
# GCP Setup Script for MoniPersonal Infrastructure
# ============================================================================

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}============================================${NC}"
echo -e "${GREEN}MoniPersonal - GCP Infrastructure Setup${NC}"
echo -e "${GREEN}============================================${NC}"
echo

# Check prerequisites
echo -e "${YELLOW}Checking prerequisites...${NC}"

command -v gcloud >/dev/null 2>&1 || { echo -e "${RED}gcloud CLI is required but not installed. Aborting.${NC}" >&2; exit 1; }
command -v terraform >/dev/null 2>&1 || { echo -e "${RED}Terraform is required but not installed. Aborting.${NC}" >&2; exit 1; }
command -v kubectl >/dev/null 2>&1 || { echo -e "${RED}kubectl is required but not installed. Aborting.${NC}" >&2; exit 1; }

echo -e "${GREEN}✓ All prerequisites installed${NC}"
echo

# Get project ID
read -p "Enter your GCP Project ID: " PROJECT_ID
read -p "Enter region (default: us-central1): " REGION
REGION=${REGION:-us-central1}

echo
echo -e "${YELLOW}Configuration:${NC}"
echo "  Project ID: $PROJECT_ID"
echo "  Region: $REGION"
echo

read -p "Is this correct? (y/n) " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]
then
    echo -e "${RED}Setup cancelled.${NC}"
    exit 1
fi

# Set project
echo -e "${YELLOW}Setting GCP project...${NC}"
gcloud config set project $PROJECT_ID

# Enable required APIs
echo -e "${YELLOW}Enabling required GCP APIs...${NC}"
gcloud services enable \
  compute.googleapis.com \
  container.googleapis.com \
  servicenetworking.googleapis.com \
  sqladmin.googleapis.com \
  secretmanager.googleapis.com \
  cloudresourcemanager.googleapis.com \
  iam.googleapis.com \
  logging.googleapis.com \
  monitoring.googleapis.com \
  --project=$PROJECT_ID

echo -e "${GREEN}✓ APIs enabled${NC}"

# Create GCS bucket for Terraform state
BUCKET_NAME="${PROJECT_ID}-terraform-state"
echo -e "${YELLOW}Creating GCS bucket for Terraform state: $BUCKET_NAME${NC}"

if gsutil ls -b gs://$BUCKET_NAME 2>/dev/null; then
    echo -e "${YELLOW}Bucket already exists${NC}"
else
    gsutil mb -p $PROJECT_ID -l $REGION gs://$BUCKET_NAME
    gsutil versioning set on gs://$BUCKET_NAME
    echo -e "${GREEN}✓ Bucket created${NC}"
fi

# Create terraform.tfvars
echo -e "${YELLOW}Creating terraform.tfvars file...${NC}"
cd ../terraform/environments/dev

cat > terraform.tfvars <<EOF
# Auto-generated by setup-gcp.sh
project_id   = "$PROJECT_ID"
project_name = "monipersonal"
environment  = "dev"
region       = "$REGION"
zone         = "${REGION}-a"
EOF

echo -e "${GREEN}✓ terraform.tfvars created${NC}"

# Update backend configuration
echo -e "${YELLOW}Updating Terraform backend configuration...${NC}"
cat > backend.tf <<EOF
terraform {
  backend "gcs" {
    bucket = "$BUCKET_NAME"
    prefix = "terraform/state/dev"
  }
}
EOF

echo -e "${GREEN}✓ Backend configuration updated${NC}"

echo
echo -e "${GREEN}============================================${NC}"
echo -e "${GREEN}Setup complete!${NC}"
echo -e "${GREEN}============================================${NC}"
echo
echo -e "${YELLOW}Next steps:${NC}"
echo "1. Review terraform.tfvars in terraform/environments/dev/"
echo "2. Run: cd terraform/environments/dev && terraform init"
echo "3. Run: terraform plan"
echo "4. Run: terraform apply"
echo
echo -e "${YELLOW}Estimated time: 15-20 minutes${NC}"
echo -e "${YELLOW}Estimated cost: $40-50/month for dev environment${NC}"
